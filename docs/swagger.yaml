definitions:
  handler.createEmployeeRequest:
    properties:
      company_id:
        example: 1
        type: integer
      department_name:
        example: First Department
        type: string
      department_phone:
        example: +7(987)1112233
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Ivan
        type: string
      passport_number:
        example: 1122 112233
        type: string
      passport_type:
        example: Russian passport
        type: string
      phone:
        example: +7(987)6667788
        type: string
      surname:
        example: Ivanov
        type: string
    required:
    - company_id
    - department_name
    - department_phone
    - id
    - name
    - passport_number
    - passport_type
    - phone
    - surname
    type: object
  handler.getListEmployeesByCompanyIdElement:
    properties:
      company_id:
        type: integer
      department_name:
        type: string
      department_phone:
        type: string
      id:
        type: integer
      name:
        type: string
      passport_number:
        type: string
      passport_type:
        type: string
      phone:
        type: string
      surname:
        type: string
    type: object
  handler.listEmployeesByDepartmentElement:
    properties:
      company_id:
        type: integer
      department_name:
        type: string
      department_phone:
        type: string
      id:
        type: integer
      name:
        type: string
      passport_number:
        type: string
      passport_type:
        type: string
      phone:
        type: string
      surname:
        type: string
    type: object
  handler.updateEmployeeRequest:
    properties:
      company_id:
        type: integer
      department_name:
        type: string
      department_phone:
        type: string
      name:
        type: string
      passport_number:
        type: string
      passport_type:
        type: string
      phone:
        type: string
      surname:
        type: string
    type: object
  handler.updateEmployeeResponse:
    properties:
      company_id:
        type: integer
      department_name:
        type: string
      department_phone:
        type: string
      id:
        type: integer
      name:
        type: string
      passport_number:
        type: string
      passport_type:
        type: string
      phone:
        type: string
      surname:
        type: string
    type: object
  thttp.ResponseError:
    properties:
      description:
        type: string
      error_code:
        type: integer
      ok:
        type: boolean
      result: {}
    type: object
  thttp.ResponseOk:
    properties:
      description:
        type: string
      error_code:
        type: integer
      ok:
        type: boolean
      result: {}
    type: object
  thttp.ResponseWithDetails-handler_getListEmployeesByCompanyIdResponse:
    properties:
      description:
        type: string
      error_code:
        type: integer
      ok:
        type: boolean
      result:
        items:
          $ref: '#/definitions/handler.getListEmployeesByCompanyIdElement'
        type: array
    type: object
  thttp.ResponseWithDetails-handler_listEmployeesByDepartmentResponse:
    properties:
      description:
        type: string
      error_code:
        type: integer
      ok:
        type: boolean
      result:
        items:
          $ref: '#/definitions/handler.listEmployeesByDepartmentElement'
        type: array
    type: object
  thttp.ResponseWithDetails-handler_updateEmployeeResponse:
    properties:
      description:
        type: string
      error_code:
        type: integer
      ok:
        type: boolean
      result:
        $ref: '#/definitions/handler.updateEmployeeResponse'
    type: object
  thttp.ResponseWithDetails-string:
    properties:
      description:
        type: string
      error_code:
        type: integer
      ok:
        type: boolean
      result:
        type: string
    type: object
info:
  contact: {}
  description: API Server for application
  title: Test task Swartway
  version: "1.0"
paths:
  /api/employee/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.createEmployeeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Создание работника
      tags:
      - Employee
  /api/employee/delete/{employeeId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Идентификатор работника
        in: path
        name: employeeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/thttp.ResponseOk'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/thttp.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/thttp.ResponseError'
      summary: Удаление работника
      tags:
      - Employee
  /api/employee/list/{companyId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Идентификатор компании
        in: path
        name: companyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/thttp.ResponseWithDetails-handler_getListEmployeesByCompanyIdResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/thttp.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/thttp.ResponseError'
      summary: Получение работников по id компании
      tags:
      - Employee
  /api/employee/list/department/{depName}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Название отдела
        in: path
        name: depName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/thttp.ResponseWithDetails-handler_listEmployeesByDepartmentResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/thttp.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/thttp.ResponseError'
      summary: Получение работников по отделу
      tags:
      - Employees
  /api/employee/update/{employeeId}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Идентификатор пользователя
        in: path
        name: employeeId
        required: true
        type: string
      - description: da
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.updateEmployeeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/thttp.ResponseWithDetails-handler_updateEmployeeResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/thttp.ResponseError'
        "409":
          description: Already exists
          schema:
            $ref: '#/definitions/thttp.ResponseError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/thttp.ResponseError'
      summary: Изменение данных работника
      tags:
      - Employee
  /api/ping:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/thttp.ResponseWithDetails-string'
      summary: Пинг сервиса
      tags:
      - Служебные
swagger: "2.0"
